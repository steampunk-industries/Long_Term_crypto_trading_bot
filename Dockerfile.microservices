# Use Python 3.11 slim as the base image for CPU-based microservices
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    gcc \
    curl \
    git \
    libpq-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements file
COPY requirements.txt .

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install -r requirements.txt

# Install additional packages for microservices
RUN pip install pika==1.3.2 \
    prometheus-client==0.19.0 \
    fastapi==0.108.0 \
    uvicorn==0.25.0 \
    pydantic~=1.10.0 \
    tenacity==8.2.3 \
    websockets==12.0 \
    pytest==7.4.3 \
    pytest-cov==4.1.0 \
    python-multipart==0.0.6 \
    aiofiles==23.2.1 \
    httpx==0.25.2

# Copy the entire application
COPY . .

# Create a non-root user to run the application
RUN adduser --disabled-password --gecos "" appuser
RUN chown -R appuser:appuser /app
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/health').raise_for_status()"

# Set entrypoint
ENTRYPOINT [ "python", "-m" ]

# Default command (can be overridden)
CMD ["microservices.trading_service"]
